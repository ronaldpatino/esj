/* 2009 - 2010 (c) | ez-css.org
 * ez.css ::  version 1.3 :: 03132010
 *
 * This style sheet caters for IE 5 browsers.
 * With this style sheet, use the snippets from http://www.ez-css.org/layouts
*/

/*
 * auto-centering in IE 5
 * we reset this value in the next rule so content is left aligned.
 */

body {text-align: center; background-color: #E4DED0;
}

/*
 * This wrapper, first child of body, is used to wrap "ez-css" modules.
 * It will auto-center if it is given a width smaller than the width of the viewport.
 * Position relative is used to create a stacking context from the start (to prevent z-index issues).
 * overflow:hidden is used to create a block formatting context, but if you give this element a width you can replace this declaration with display:inline-block
 */

.ez-mw {
    margin-right: auto;
    margin-left: auto;
    text-align: left;
    position :relative;
    z-index: 1;
    text-align: left;
    overflow: hidden;
}

/*
 * to make sure modules clear previous containers
 */

.ez-wr {clear: left;}

/*
 * this is the clearfix method
 * we rely on this to contain floats in "stand-alone" modules
 */

.ez-wr:after,
.ez-box:after {
    content: ".";
    display: block;
    height: 0;
    clear: both;
    visibility: hidden;
}

/*
 * hacks for IE 5 (Win and Mac)
 * (min-height is the "hasLayout" trigger used for IE7)
 */

.ez-wr,.ez-box,.ez-last {display: inline-block;min-height: 0;}
/* hides from IE-mac \*/
* html .ez-wr,
* html .ez-box,
* html .ez-last {height: 1%;}
.ez-wr,.ez-box,.ez-last {display: block;}
/* end hide from IE-mac */

/*
 * the last DIV in the HTML flow (a column) must create a new block formatting context.
 * by default, we rely on "overflow:hidden", but if this creates an issue with your design, then try one of these classes instead:
 * ez-oa
 * ez-dt
 * ez-it
 * ez-tc
 * ez-ib
 */

.ez-oh {
    overflow: hidden;
}

* html .ez-oh {
    overflow: visible;
}

.ez-oa {
    overflow: auto;
}
.ez-dt {
    display: table;
}

.ez-it {
    display: inline-table;
}
.ez-tc {
    display: table-cell;
}

.ez-ib {
    display: inline-block;
}

/*
 * DIVs to be columns
 * we float them left or right depending on module or layout
 * the negative margin is used to fix a IE6 bug (3px jog).
 */
.ez-fl {
    float: left;
}

* html .ez-fl {
    margin-right: -3px;
}

.ez-fr {
    float: right;
}

* html .ez-fr {
    margin-left: -3px;
}

/*
 * every floated column in a module or layout needs a width
 * here we have 5 default values: 1/4, 1/3, 1/2, 2/3 and 3/4
 */

.ez-25 {width: 25%;}
.ez-33 {width: 33.33%;}
.ez-50 {width: 50%;}
.ez-66 {width: 66.66%;}
.ez-75 {width: 75%;}

/*
 * the following classes are used to make columns that are siblings overlap by 1 pixel (to vertically align 1 pixel borders between containers)
 * for this to work, this class must be applied to the following elements:
 * - column 1 of Module 2A,
 * - column 2 of Module 3A,
 * - column 1 of Module 3B,
 * - column 3 of Module 4A,
 * - column 1 of Module 4B,
 * - column 1 in column 1 of Module 4B,
 * - column 2 in column 1 of Module 4B
 */

.ez-negmr {
    margin-right: -1px;
}

* html .ez-negmr {
    margin-right:-4px;
}

/*
 * (star html hack is used here because of the cascade, to override "* html .ez-fl")
 * same as above, but for these elements:
 * - column 1 of Module 3A,
 * - column 1 of Module 4A,
 * - column 2 of Module 4A
 */

* html .ez-negmx,
.ez-negmx {
    margin-right: -1px;
}

/*
 * same as above, but for these elements:
 * - column 1 of Module 2B,
 * - column 2 of Module 3B
 */

.ez-negml {
    margin-left: -1px;
}

* html .ez-negml {
    margin-left:-4px;
}


/**/
.centered {

        margin: 5px auto 0 auto;
}


/**/



/* 2009 - 2010 (c) | ez-css.org
             * ez-start-2C ::  version 1.0 (03142010)
             *
             * Two columns with header and footer, sidebar on the right hand side, main content comes first.
             *
             *
             * You should replace the following rule with your own reset or base styles sheet
             * visit: http://carsonified.com/blog/design/setting-rather-than-resetting-default-styling
             */

* {
    margin: 0;
    padding: 0;
}

/*
 * To set the width of the main wrapper
 */

#wrapper {width: 1024px;}

/*
 * You can use this wrapper for the faux-column technique
 * Check http://www.alistapart.com/articles/fauxcolumns/
 */

#body {
    margin-top: 0px;
    margin-bottom: 0px;
    border-bottom: 1px solid #555;
    border-top:1px solid #555;
    background: url("../img/bg-main.jpg");
    background-size: auto;
}

/*
 * This element needs a width
 */

#article {
    width: 70%;
    padding:15px 0 15px 15px;
    border-left: 0px solid #555;
}

/*
 * Unlike the right column (#article), this element does *not* need a width
 */

#aside {
    padding: 0;
    border-right: 0px solid #555;
}

/**********************************************************************************
 Below this comment are the core rules, there should be no need to edit any of them
 **********************************************************************************
 *
 * auto-centering in IE 5
 * we reset this value in the next rule so content is left aligned.
 */

body {text-align: center;}

/*
 * margin "auto" is to center this element (we set the width in a separate rule near the top of this styles sheet).
 * "text-align" is to reset the declaration from "body".
 * "inline:block" is to create a block-formatting context (the "width" does that in IE).
 */

#wrapper {
    margin-right: auto;
    margin-left: auto;
    text-align: left;
    display: inline-block;
}

/*
 * this is the clearfix method
 * we rely on this to contain floats in these elements
 */

#header:after,
#body:after,
#footer:after {
    content: ".";
    display: block;
    height: 0;
    clear: both;
    visibility: hidden;
}

#footer {
    background-color: #697c22;
}

/*
 * hacks for IE
 * "min-height" triggers "hasLayout" in IE 7,
 * "height" is the trigger for IE 5 and 6.
 */

#header,
#body,
#aside,
#footer {min-height: 40px;}
* html #header,
* html #body,
* html #aside,
* html #footer {height: 1%;}

/*
 * this element must create a new block formatting context.
 * by default, we rely on "overflow:hidden", but if this creates an issue with your design, then apply to this element one of the following rules
 * ez-oa
 * ez-dt
 * ez-it
 * ez-tc
 * ez-ib
 */

#aside {overflow: hidden;}

/*
 * rules to apply to the second column (#article) if the styling above (overflow:hidden) creates issues with your design
 */

.ez-oa {overflow: visible; overflow: auto;}
.ez-dt {overflow: visible; display: table;}
.ez-it {overflow: visible; display: inline-table;}
.ez-tc {overflow: visible; display: table-cell;}
.ez-ib {overflow: visible; display: inline-block;}

/*
 * 2nd column
 * the negative margin is to allow the border of the two columns to overlap
 */

#article {
    float: right;
    border-left: 1px solid #555555;
    padding: 0;
    width: 71%;
}

/*
 * the following fixes the "3px jog bug"
 */

* html #article {margin-left: -4px;}

/**********************************************************************************
 ***   The above are core rules, there should be no need to edit any of them    ***
**********************************************************************************/
